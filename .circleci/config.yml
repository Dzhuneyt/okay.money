# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build_backend:
    docker:
      # Base version where the app runs
      - image: circleci/php:7.1-browsers
      - image: tkuchiki/delayed-mysql
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_DATABASE: circleci

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mysql:9.4

    working_directory: ~/repo/backend

    steps:
      - checkout:
          path: ~/repo
      - run: sudo apt install -qq libsqlite3-dev zlib1g-dev
      - run: |
          sudo docker-php-ext-install pdo_mysql
          sudo docker-php-ext-enable pdo_mysql

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist --quiet --optimize-autoloader

      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "composer.json" }}

      # Run unit tests
      - run:
          name: Run unit tests
          command: composer test-unit
      - run:
          name: Init app for CircleCI functional tests
          command: php init --env=CircleCI --overwrite=y
      - run:
          name: Start lite server for functional tests (will auto-kill after 15 minutes)
          command: timeout 1800 php yii server --test
          background: true

      #- run: php requirements.php
      - run:
          name: Wait for DB
          # preinstalled in circleci/* docker image
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s -wait-retry-interval=5s

      - run:
          name: Functional tests
          command: composer test-functional

  build_frontend:
    docker:
      - image: circleci/node:8-browsers

    working_directory: ~/repo/frontend

    steps:
      - checkout:
          path: ~/repo
      - restore_cache:
          key: AngularCircleCI-{{ .Branch }}-{{ checksum "package.json" }}
      - run: npm install
      - save_cache:
          key: AngularCircleCI-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - "node_modules"
      - run: xvfb-run -a npm run build
#      - run: xvfb-run -a npm run test -- --single-run --no-progress --browser=ChromeNoSandbox
#      - run: xvfb-run -a npm run e2e -- --no-progress --config=protractor-ci.conf.js

workflows:
  version: 2
  backend_and_frontend:
    jobs:
      - build_backend
      - build_frontend
