version: 0.2

phases:
  install:
    commands:
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2&
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
    runtime-versions:
      docker: 18
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - eval $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - echo Installing Terraform && wget -q https://releases.hashicorp.com/terraform/0.12.7/terraform_0.12.7_linux_amd64.zip && unzip terraform_0.12.7_linux_amd64.zip -d /usr/local/bin && chmod +x /usr/local/bin/terraform
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - echo Version name will be ${IMAGE_TAG}
  build:
    commands:
      - echo Build started on `date`
      - docker run hello-world
      - ./scripts/docker-compose-push.sh ${IMAGE_TAG}
  #      - echo Initializing Terraform
  #      - cd ./terraform && terraform init
  #      - terraform plan -var="version_tag=${IMAGE_TAG}"
  #      - REPO_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME
  #      - docker pull $REPO_URI:latest || true
  #      - docker build --cache-from $REPO_URI:latest --tag $REPO_URI:latest --tag $REPO_URI:$IMAGE_TAG .
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
#      - REPO_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME
#      - docker push $REPO_URI:latest
#      - docker push $REPO_URI:$IMAGE_TAG
#      - echo Writing image definitions file...
#      - printf '[{"name":"%s","imageUri":"%s"}]' "$CONTAINER_NAME" "$REPO_URI:$IMAGE_TAG" | tee imagedefinitions.json
#artifacts:
#  files: imagedefinitions.json
